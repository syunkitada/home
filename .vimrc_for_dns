" ----------------------------------------
" dns syntax
" ----------------------------------------
syntax on

if version < 600
    syntax clear
elseif exists("b:current_syntax")
    finish
endif

" Last match is taken!
syn match dnsKeyword    "\<\(IN\|A\|AAAA\|SOA\|NS\|CNAME\|MX\|PTR\|SOA\|MB\|MG\|MR\|NULL\|WKS\|HINFO\|TXT\|CS\|CH\|CPU\|OS\)\>"
syn match dnsRecordName "^\S*"
syn match dnsPreProc    "^\$\S*"
syn match dnsComment    ";.*$"
syn match dnsDataFQDN   "\s\zs[^: 	]*\.\s*$"
syn match dnsConstant   "\s\zs\(\d[0-9.]*\|[0-9.]*\d\)\>"
syn match dnsIPaddr     "\s\zs\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\s*$"

" Plain IPv6 address     IPv6-embedded-IPv4 address
" ---------------------------------------------------
" 1111:2:3:4:5:6:7:8     1111:2:3:4:5:6:127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{6}\(\x\{1,4}:\x\{1,4}\|\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" ::[...:]8              ::[...:]127.0.0.1
syn match dnsIP6addr    "\s\zs::\(\(\x\{1,4}:\)\{,6}\x\{1,4}\|\(\x\{1,4}:\)\{,5}\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111::[...:]8          1111::[...:]127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{1}:\(\(\x\{1,4}:\)\{,5}\x\{1,4}\|\(\x\{1,4}:\)\{,4}\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111:2::[...:]8        1111:2::[...:]127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{2}:\(\(\x\{1,4}:\)\{,4}\x\{1,4}\|\(\x\{1,4}:\)\{,3}\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111:2:3::[...:]8      1111:2:3::[...:]127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{3}:\(\(\x\{1,4}:\)\{,3}\x\{1,4}\|\(\x\{1,4}:\)\{,2}\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111:2:3:4::[...:]8    1111:2:3:4::[...:]127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{4}:\(\(\x\{1,4}:\)\{,2}\x\{1,4}\|\(\x\{1,4}:\)\{,1}\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111:2:3:4:5::[...:]8  1111:2:3:4:5::127.0.0.1
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{5}:\(\(\x\{1,4}:\)\{,1}\x\{1,4}\|\([0-2]\?\d\{1,2}\.\)\{3}[0-2]\?\d\{1,2}\)\s*$"
" 1111:2:3:4:5:6::8      -
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{6}:\x\{1,4}\s*$"
" 1111[:...]::           -
syn match dnsIP6addr    "\s\zs\(\x\{1,4}:\)\{1,7}:\s*$"

" Define the default highlighting.
" For version 5.7 and earlier: only when not done already
" For version 5.8 and later: only when an item doesn't have highlighting yet.
if version >= 508 || !exists("did_dns_syntax_inits")
    if version < 508
        let did_dns_syntax_inits = 1
        command -nargs=+ HiLink hi link <args>
    else
        command -nargs=+ HiLink hi def link <args>
    endif

    HiLink dnsComment     Comment
    HiLink dnsDataFQDN    Identifier
    HiLink dnsPreProc     PreProc
    HiLink dnsKeyword     Keyword
    HiLink dnsRecordName  Type
    HiLink dnsIPaddr      Type
    HiLink dnsIP6addr     Type
    HiLink dnsConstant    Constant

    delcommand HiLink
endif


" visualize tab
highlight Tab ctermbg=236
au BufWinEnter * let w:m1 = matchadd("Tab", '\t')
au WinEnter * let w:m1 = matchadd("Tab", '\t')

" visualize 4 space
highlight Whitespaces ctermbg=234
au BufWinEnter * let w:m1 = matchadd("Whitespaces", '    ')
au WinEnter * let w:m1 = matchadd("Whitespaces", '    ')

" visualize eol of space and tab
highlight WhitespaceEOL ctermbg=240
au BufWinEnter * let w:m1 = matchadd("WhitespaceEOL", '[ \t]\+$')
au WinEnter * let w:m1 = matchadd("WhitespaceEOL", '[ \t]\+$')

" visualize double-byte space
highlight ZenkakuSpace cterm=underline ctermbg=209
au BufWinEnter * let w:m3 = matchadd("ZenkakuSpace", '　')
au WinEnter * let w:m3 = matchadd("ZenkakuSpace", '　')


" check format of dns recode
let ttl = '[0-9]*'
let hostname  = '[0-9a-zA-Z.]\+'

let bad_cname_recode = '[ \t]\+IN[ \t]\+CNAME[ \t]\+'.hostname.'[^.]$'
" 192.168.11.2  IN    CNAME    hoge.com
highlight DnsBadCnameRecode cterm=underline ctermbg=209
au BufWinEnter * let w:m3 = matchadd("DnsBadCnameRecode", bad_cname_recode)
au WinEnter * let w:m3 = matchadd("DnsBadCnameRecode", bad_cname_recode)

let bad_a_recode = '\.\(jp\|com\)[ \t]\+'.ttl.'[ \t]\+IN[ \t]\+A[ \t]\+'
" test.jp   IN    A    193
highlight DnsBadARecode cterm=underline ctermbg=209
au BufWinEnter * let w:m3 = matchadd("DnsBadARecode", bad_a_recode)
au WinEnter * let w:m3 = matchadd("DnsBadARecode", bad_a_recode)



" ----------------------------------------
" common settings
" ----------------------------------------

" indent
set tabstop=4
set shiftwidth=4
set expandtab

" search
set hlsearch
set incsearch
set ignorecase
set smartcase

" show number of lines
set number

" enable mouse operation
set mouse=nv

" disable default japanise input
" disable default japanise input in insert mode
set iminsert=0
" disable default japanise input in search mode
set imsearch=0

" no swapfile, backupfile
set noswapfile
set nobackup

" set to block the selected range of rectangle visual mode
set virtualedit=block


" set completion on command line mode
" list:full is show completion list, if there are two more completions
set wildmenu wildmode=list:full

" enable backspace on start, end, indent
" start  : enable delete on enter insert mode
" eol    : enable delete end of line
" indent : enable delete indent(autoindent)
set backspace=start,eol,indent

" for teraterm
" eliminate the wait time after pressing the ESC key in insert mode
" let &t_SI .= "\e[?7727h"
" let &t_EI .= "\e[?7727l"
" inoremap <special> <Esc>O[ <Esc>
set timeoutlen=1000 ttimeoutlen=0

" support 'GNU Screen'
set ttymouse=xterm2

" tmux用
" tmuxは背景色消去に対応していないので、vimを開くと文字がない部分の背景色が端末の背景色のままになってしまう
" t_ut 端末オプションで、現在の背景色を使って端末の背景をクリアする
set t_ut=

