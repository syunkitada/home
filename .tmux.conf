# --------------------------------------------------
# key map
#
# basic commands
# $ tmux            : run tmux
# $ tmux a -t [id]  : attach session
# $ tmux ls         : show session list
# $ tmux rename -t 0 hoge  : rename session
# --------------------------------------------------

# bind d    : detach
# bind z    : switch full screen

# pane
# -c "#{pane_current_path}" で、カレントディレクトリで開始するようにする
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind Space new-window -c "#{pane_current_path}"
bind q kill-pane # 基本的にexitで抜けた方がいい
bind Q kill-window
bind b break-pane # 現在のpaneをwindowにする
# bind ,    : rename

# switch window
bind p previous-window
bind n next-window
# bind w    : window list

# switch pane
bind h select-pane -L #left
bind j select-pane -D #down
bind k select-pane -U #up
bind l select-pane -R #right

# resize pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# sync panes
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# copy mode
# use vim key bind on copy mode
set-window-option -g mode-keys vi
# bind [           : copy mode
# [copymode]Space  : start select mode
# [copymode]Enter  : copy end
# bind ]           : paste
# q end copy mode

# other
bind r source-file ~/.tmux.conf


# --------------------------------------------------
# basic settings
# --------------------------------------------------

# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# マウスを有効にする
# マウスでドラッグするとtmuxのコピーモードとなりtmux内でコピーされる
# teratermなどを利用してるなら、制御シーケンスの設定でクリップボードを有効にしておくと、クライアント側のクリップボードにも保存される
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' " \
    set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on; \
    set -g message-fg red; \
    set -g message-bg black; \
    set -g message-attr bright; \
    set -g window-status-bg default; \
    set -g window-status-fg default; \
    set -g window-status-current-attr bold; \
    set -g window-status-current-bg cyan; \
    set -g window-status-current-fg default; \
    set -g window-status-bell-fg red; \
    set -g window-status-bell-bg black; \
    set -g window-status-activity-fg white; \
    set -g window-status-activity-bg black"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"

# bind-key syntax changed in 2.4 -- selection / copy / paste
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
   bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
   "set -g message-style fg=red,bg=black; \
    set -g message-style bright; \
    set -g window-status-style          fg=default,bg=default; \
    set -g window-status-current-style  fg=default,bg=cyan,bold; \
    set -g window-status-bell-style     fg=red,bg=black; \
    set -g window-status-activity-style fg=white,bg=black"

# statusの更新間隔
set -g status-interval 10

# set history size
set-option -g history-limit 100000

# escapeが遅延する問題を回避
set -s escape-time 0


# --------------------------------------------------
# window and colors
# --------------------------------------------------

#ウィンドウを実行コマンド名で自動リネーム
set-window-option -g automatic-rename on

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange


# 新規ウィンドウをカレントディレクトリで開く(version 1.9で利用可能)
unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -v -c "#{pane_current_path}"


# --------------------------------------------------
# plugins
# Install: (prefix) + I
# Update: (prefix) + U
# --------------------------------------------------

# List of plugins
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
